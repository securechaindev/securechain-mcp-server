from mcp.types import TextContent

from app.exceptions import ExploitNotFoundException
from app.services import (
    read_exploit_by_id,
    read_exploits_by_vuln_id
)
from app.utils import as_text_content, json_encoder


async def get_exploit_tool(
    exploit_id: str
) -> list[TextContent]:
    try:
        out = await read_exploit_by_id(exploit_id)
        return await as_text_content(await json_encoder(out))
    except ExploitNotFoundException:
        return [TextContent(type="text", text=f"Exploit not found: {exploit_id}")]
    except Exception as e:
        return [TextContent(type="text", text=f"error: {e!s}")]


async def get_exploits_by_vuln_id(
    vulnerability_id: str
) -> list[TextContent]:
    try:
        out = await read_exploits_by_vuln_id(vulnerability_id)
        return await as_text_content(await json_encoder(out))
    except ExploitNotFoundException:
        return [TextContent(type="text", text=f"Exploit not found for vulnerability ID: {vulnerability_id}")]
    except Exception as e:
        return [TextContent(type="text", text=f"error: {e!s}")]